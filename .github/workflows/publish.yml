name: Publish to PyPI

on:
  release:
    types: [created]

# Add concurrency control
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Note: Before using this workflow to publish to PyPI, you need to add the following secret in GitHub repository's Settings > Secrets and variables > Actions:
#  - PYPI_API_TOKEN: PyPI API token, which can be created from https://pypi.org/manage/account/token/

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    # Add dependency cache
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      env:
        PYTHONUNBUFFERED: 1
        PYTHONDONTWRITEBYTECODE: 1
      run: |
        python -m pip install --upgrade pip
        pip install build
    
    - name: Build package
      env:
        PYTHONUNBUFFERED: 1
      run: |
        python -m build
    
    - name: Check if PyPI token is configured
      id: check_token
      env:
        PYTHONUNBUFFERED: 1
      run: |
        if [[ -n "${{ secrets.PYPI_API_TOKEN }}" ]]; then
          echo "token_exists=true" >> $GITHUB_OUTPUT
        else
          echo "token_exists=false" >> $GITHUB_OUTPUT
          echo "::warning::PyPI API token not configured. Skipping package publication."
        fi
    
    - name: Publish package
      if: steps.check_token.outputs.token_exists == 'true'
      env:
        PYTHONUNBUFFERED: 1
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}